{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "audio-functions",
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Function account."
      }
    },
    "AppServicePlan": {
      "defaultValue": "audio-plan",
      "type": "string",
      "metadata": {
        "description": "The name for the App Service plan you want to create for your Azure Function."
      }
    },
    "StorageAccountName": {
      "defaultValue": "audiostore",
      "type": "string",
      "metadata": {
        "description": "The name for the storage account."
      }
    },
    "ApplicationInsightsName": {
      "defaultValue": "audio-insights",
      "type": "string",
      "metadata": {
        "description": "The name for the Application Insights service"
      }
    },
    "SpeechAccountName": {
      "defaultValue": "audio-speech",
      "type": "string",
      "metadata": {
        "description": "The name for the speech account."
      }
    },
    "SpeechLanguage": {
      "defaultValue": "en-US",
      "type": "string",
      "metadata": {
        "description": "The language you want to use to convert from speech to text."
      }
    }
  },
  "variables": {
    "contentShareName": "[toLower(parameters('FunctionName'))]",
    "repoUrl": "https://github.com/0GiS0/audio-azure-functions.git",
    "branch": "master"
  },
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2016-02-01-preview",
      "name": "[parameters('SpeechAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "properties": {}
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('ApplicationInsightsName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[parameters('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('AppServicePlan')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "name": "[parameters('AppServicePlan')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('FunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlan'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('contentShareName')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "SpeechKey",
              "value": "[listKeys(parameters('SpeechAccountName'),'2016-02-01-preview').key1]"
            },
            {
              "name": "SpeechRegion",
              "value": "[resourceGroup().location]"
            },
            {
              "name": "ffmpegPath",
              "value": "D:\\home\\site\\wwwroot\\tools\\ffmpeg.exe"
            },
            {
              "name": "SpeechLanguage",
              "value": "[toLower(parameters('SpeechLanguage'))]"
            }
          ]
        },
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('FunctionName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('FunctionName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlan'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false
      }
    },
    {
      "name": "[concat(parameters('FunctionName'), '/web')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2018-02-01",
      "properties": {
        "repoUrl": "[variables('repoURL')]",
        "branch": "[variables('branch')]",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('FunctionName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$audio-azure-functions",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "",
        "siteAuthEnabled": false,
        "siteAuthSettings": {
          "enabled": null,
          "unauthenticatedClientAction": null,
          "tokenStoreEnabled": null,
          "allowedExternalRedirectUrls": null,
          "defaultProvider": null,
          "clientId": null,
          "clientSecret": null,
          "clientSecretCertificateThumbprint": null,
          "issuer": null,
          "allowedAudiences": null,
          "additionalLoginParams": null,
          "isAadAutoProvisioned": false,
          "googleClientId": null,
          "googleClientSecret": null,
          "googleOAuthScopes": null,
          "facebookAppId": null,
          "facebookAppSecret": null,
          "facebookOAuthScopes": null,
          "twitterConsumerKey": null,
          "twitterConsumerSecret": null,
          "microsoftAccountClientId": null,
          "microsoftAccountClientSecret": null,
          "microsoftAccountOAuthScopes": null
        },
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2016-08-01",
      "name": "[concat(parameters('FunctionName'), '/', parameters('FunctionName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionName'))]"
      ],
      "properties": {
        "siteName": "audio-azure-functions",
        "hostNameType": "Verified"
      }
    }
  ],
  "outputs": {    
  }
}